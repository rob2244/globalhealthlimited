// Code generated by protoc-gen-go. DO NOT EDIT.
// source: devicedataservice.proto

package devicedataservice

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type DeviceDataRequest struct {
	DeviceKey            string   `protobuf:"bytes,1,opt,name=deviceKey,proto3" json:"deviceKey,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeviceDataRequest) Reset()         { *m = DeviceDataRequest{} }
func (m *DeviceDataRequest) String() string { return proto.CompactTextString(m) }
func (*DeviceDataRequest) ProtoMessage()    {}
func (*DeviceDataRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_27e2c241e28a49d8, []int{0}
}

func (m *DeviceDataRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeviceDataRequest.Unmarshal(m, b)
}
func (m *DeviceDataRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeviceDataRequest.Marshal(b, m, deterministic)
}
func (m *DeviceDataRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeviceDataRequest.Merge(m, src)
}
func (m *DeviceDataRequest) XXX_Size() int {
	return xxx_messageInfo_DeviceDataRequest.Size(m)
}
func (m *DeviceDataRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeviceDataRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeviceDataRequest proto.InternalMessageInfo

func (m *DeviceDataRequest) GetDeviceKey() string {
	if m != nil {
		return m.DeviceKey
	}
	return ""
}

type DeviceDataResponse struct {
	DeviceKey            string   `protobuf:"bytes,1,opt,name=deviceKey,proto3" json:"deviceKey,omitempty"`
	PublishDate          string   `protobuf:"bytes,2,opt,name=publishDate,proto3" json:"publishDate,omitempty"`
	Brand                string   `protobuf:"bytes,3,opt,name=brand,proto3" json:"brand,omitempty"`
	Company              string   `protobuf:"bytes,4,opt,name=company,proto3" json:"company,omitempty"`
	ModelNumber          string   `protobuf:"bytes,5,opt,name=modelNumber,proto3" json:"modelNumber,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeviceDataResponse) Reset()         { *m = DeviceDataResponse{} }
func (m *DeviceDataResponse) String() string { return proto.CompactTextString(m) }
func (*DeviceDataResponse) ProtoMessage()    {}
func (*DeviceDataResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_27e2c241e28a49d8, []int{1}
}

func (m *DeviceDataResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeviceDataResponse.Unmarshal(m, b)
}
func (m *DeviceDataResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeviceDataResponse.Marshal(b, m, deterministic)
}
func (m *DeviceDataResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeviceDataResponse.Merge(m, src)
}
func (m *DeviceDataResponse) XXX_Size() int {
	return xxx_messageInfo_DeviceDataResponse.Size(m)
}
func (m *DeviceDataResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeviceDataResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeviceDataResponse proto.InternalMessageInfo

func (m *DeviceDataResponse) GetDeviceKey() string {
	if m != nil {
		return m.DeviceKey
	}
	return ""
}

func (m *DeviceDataResponse) GetPublishDate() string {
	if m != nil {
		return m.PublishDate
	}
	return ""
}

func (m *DeviceDataResponse) GetBrand() string {
	if m != nil {
		return m.Brand
	}
	return ""
}

func (m *DeviceDataResponse) GetCompany() string {
	if m != nil {
		return m.Company
	}
	return ""
}

func (m *DeviceDataResponse) GetModelNumber() string {
	if m != nil {
		return m.ModelNumber
	}
	return ""
}

type IdentifierDataResponse struct {
	DeviceID             string   `protobuf:"bytes,1,opt,name=deviceID,proto3" json:"deviceID,omitempty"`
	DeviceType           string   `protobuf:"bytes,2,opt,name=deviceType,proto3" json:"deviceType,omitempty"`
	IssuingAgency        string   `protobuf:"bytes,3,opt,name=issuingAgency,proto3" json:"issuingAgency,omitempty"`
	PackageQuantity      int32    `protobuf:"varint,4,opt,name=packageQuantity,proto3" json:"packageQuantity,omitempty"`
	DiscontinueDate      string   `protobuf:"bytes,5,opt,name=discontinueDate,proto3" json:"discontinueDate,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IdentifierDataResponse) Reset()         { *m = IdentifierDataResponse{} }
func (m *IdentifierDataResponse) String() string { return proto.CompactTextString(m) }
func (*IdentifierDataResponse) ProtoMessage()    {}
func (*IdentifierDataResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_27e2c241e28a49d8, []int{2}
}

func (m *IdentifierDataResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IdentifierDataResponse.Unmarshal(m, b)
}
func (m *IdentifierDataResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IdentifierDataResponse.Marshal(b, m, deterministic)
}
func (m *IdentifierDataResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IdentifierDataResponse.Merge(m, src)
}
func (m *IdentifierDataResponse) XXX_Size() int {
	return xxx_messageInfo_IdentifierDataResponse.Size(m)
}
func (m *IdentifierDataResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_IdentifierDataResponse.DiscardUnknown(m)
}

var xxx_messageInfo_IdentifierDataResponse proto.InternalMessageInfo

func (m *IdentifierDataResponse) GetDeviceID() string {
	if m != nil {
		return m.DeviceID
	}
	return ""
}

func (m *IdentifierDataResponse) GetDeviceType() string {
	if m != nil {
		return m.DeviceType
	}
	return ""
}

func (m *IdentifierDataResponse) GetIssuingAgency() string {
	if m != nil {
		return m.IssuingAgency
	}
	return ""
}

func (m *IdentifierDataResponse) GetPackageQuantity() int32 {
	if m != nil {
		return m.PackageQuantity
	}
	return 0
}

func (m *IdentifierDataResponse) GetDiscontinueDate() string {
	if m != nil {
		return m.DiscontinueDate
	}
	return ""
}

func init() {
	proto.RegisterType((*DeviceDataRequest)(nil), "DeviceDataRequest")
	proto.RegisterType((*DeviceDataResponse)(nil), "DeviceDataResponse")
	proto.RegisterType((*IdentifierDataResponse)(nil), "IdentifierDataResponse")
}

func init() { proto.RegisterFile("devicedataservice.proto", fileDescriptor_27e2c241e28a49d8) }

var fileDescriptor_27e2c241e28a49d8 = []byte{
	// 316 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x92, 0x5d, 0x4a, 0x03, 0x31,
	0x10, 0xc7, 0x89, 0x5a, 0xb5, 0x23, 0x55, 0x8c, 0x62, 0x43, 0x11, 0x29, 0xc5, 0x87, 0x3e, 0x2d,
	0x7e, 0xbc, 0xf8, 0x26, 0xc2, 0x42, 0x29, 0x82, 0x60, 0xf5, 0x02, 0xd9, 0xcd, 0x58, 0x83, 0x6d,
	0x12, 0x37, 0x89, 0xb0, 0x97, 0xf0, 0x18, 0x1e, 0xc7, 0x33, 0x49, 0x93, 0xd6, 0x6e, 0xeb, 0xe2,
	0x5b, 0xe6, 0x37, 0x1f, 0xfc, 0x67, 0xfe, 0x81, 0xb6, 0xc0, 0x0f, 0x99, 0xa3, 0xe0, 0x8e, 0x5b,
	0x2c, 0x66, 0xcf, 0xc4, 0x14, 0xda, 0xe9, 0xde, 0x25, 0x1c, 0xa6, 0x21, 0x95, 0x72, 0xc7, 0x47,
	0xf8, 0xee, 0xd1, 0x3a, 0x7a, 0x0a, 0xcd, 0x58, 0x7f, 0x8f, 0x25, 0x23, 0x5d, 0xd2, 0x6f, 0x8e,
	0x96, 0xa0, 0xf7, 0x45, 0x80, 0x56, 0x7b, 0xac, 0xd1, 0xca, 0xe2, 0xff, 0x4d, 0xb4, 0x0b, 0x7b,
	0xc6, 0x67, 0x13, 0x69, 0x5f, 0x53, 0xee, 0x90, 0x6d, 0x84, 0x7c, 0x15, 0xd1, 0x63, 0x68, 0x64,
	0x05, 0x57, 0x82, 0x6d, 0x86, 0x5c, 0x0c, 0x28, 0x83, 0x9d, 0x5c, 0x4f, 0x0d, 0x57, 0x25, 0xdb,
	0x0a, 0x7c, 0x11, 0xce, 0x26, 0x4e, 0xb5, 0xc0, 0xc9, 0x83, 0x9f, 0x66, 0x58, 0xb0, 0x46, 0x9c,
	0x58, 0x41, 0xbd, 0x6f, 0x02, 0x27, 0x43, 0x81, 0xca, 0xc9, 0x17, 0x89, 0xc5, 0x8a, 0xd8, 0x0e,
	0xec, 0x46, 0x6d, 0xc3, 0x74, 0xae, 0xf5, 0x37, 0xa6, 0x67, 0x00, 0xf1, 0xfd, 0x5c, 0x9a, 0x85,
	0xd2, 0x0a, 0xa1, 0xe7, 0xd0, 0x92, 0xd6, 0x7a, 0xa9, 0xc6, 0x77, 0x63, 0x54, 0x79, 0x39, 0x17,
	0xbc, 0x0a, 0x69, 0x1f, 0x0e, 0x0c, 0xcf, 0xdf, 0xf8, 0x18, 0x1f, 0x3d, 0x57, 0x4e, 0xba, 0xb8,
	0x40, 0x63, 0xb4, 0x8e, 0x67, 0x95, 0x42, 0xda, 0x5c, 0x2b, 0x27, 0x95, 0xc7, 0x70, 0x9e, 0xb8,
	0xcc, 0x3a, 0xbe, 0xfa, 0x24, 0x55, 0xb7, 0x9e, 0xa2, 0x91, 0xf4, 0x06, 0x5a, 0x03, 0x74, 0x4b,
	0x4e, 0x69, 0xf2, 0xc7, 0xd2, 0xce, 0x51, 0x52, 0x63, 0xd9, 0x2d, 0xec, 0x0f, 0xd0, 0x2d, 0x4f,
	0x64, 0x6b, 0x5b, 0xdb, 0x49, 0xfd, 0x11, 0x2f, 0x48, 0xb6, 0x1d, 0x3e, 0xd1, 0xf5, 0x4f, 0x00,
	0x00, 0x00, 0xff, 0xff, 0x7f, 0x48, 0x27, 0xbb, 0x5f, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// DeviceDataServiceClient is the client API for DeviceDataService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DeviceDataServiceClient interface {
	GetDeviceData(ctx context.Context, in *DeviceDataRequest, opts ...grpc.CallOption) (*DeviceDataResponse, error)
	GetIdentifiers(ctx context.Context, in *DeviceDataRequest, opts ...grpc.CallOption) (DeviceDataService_GetIdentifiersClient, error)
}

type deviceDataServiceClient struct {
	cc *grpc.ClientConn
}

func NewDeviceDataServiceClient(cc *grpc.ClientConn) DeviceDataServiceClient {
	return &deviceDataServiceClient{cc}
}

func (c *deviceDataServiceClient) GetDeviceData(ctx context.Context, in *DeviceDataRequest, opts ...grpc.CallOption) (*DeviceDataResponse, error) {
	out := new(DeviceDataResponse)
	err := c.cc.Invoke(ctx, "/DeviceDataService/GetDeviceData", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *deviceDataServiceClient) GetIdentifiers(ctx context.Context, in *DeviceDataRequest, opts ...grpc.CallOption) (DeviceDataService_GetIdentifiersClient, error) {
	stream, err := c.cc.NewStream(ctx, &_DeviceDataService_serviceDesc.Streams[0], "/DeviceDataService/GetIdentifiers", opts...)
	if err != nil {
		return nil, err
	}
	x := &deviceDataServiceGetIdentifiersClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type DeviceDataService_GetIdentifiersClient interface {
	Recv() (*IdentifierDataResponse, error)
	grpc.ClientStream
}

type deviceDataServiceGetIdentifiersClient struct {
	grpc.ClientStream
}

func (x *deviceDataServiceGetIdentifiersClient) Recv() (*IdentifierDataResponse, error) {
	m := new(IdentifierDataResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// DeviceDataServiceServer is the server API for DeviceDataService service.
type DeviceDataServiceServer interface {
	GetDeviceData(context.Context, *DeviceDataRequest) (*DeviceDataResponse, error)
	GetIdentifiers(*DeviceDataRequest, DeviceDataService_GetIdentifiersServer) error
}

// UnimplementedDeviceDataServiceServer can be embedded to have forward compatible implementations.
type UnimplementedDeviceDataServiceServer struct {
}

func (*UnimplementedDeviceDataServiceServer) GetDeviceData(ctx context.Context, req *DeviceDataRequest) (*DeviceDataResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetDeviceData not implemented")
}
func (*UnimplementedDeviceDataServiceServer) GetIdentifiers(req *DeviceDataRequest, srv DeviceDataService_GetIdentifiersServer) error {
	return status.Errorf(codes.Unimplemented, "method GetIdentifiers not implemented")
}

func RegisterDeviceDataServiceServer(s *grpc.Server, srv DeviceDataServiceServer) {
	s.RegisterService(&_DeviceDataService_serviceDesc, srv)
}

func _DeviceDataService_GetDeviceData_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeviceDataRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeviceDataServiceServer).GetDeviceData(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/DeviceDataService/GetDeviceData",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeviceDataServiceServer).GetDeviceData(ctx, req.(*DeviceDataRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DeviceDataService_GetIdentifiers_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(DeviceDataRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(DeviceDataServiceServer).GetIdentifiers(m, &deviceDataServiceGetIdentifiersServer{stream})
}

type DeviceDataService_GetIdentifiersServer interface {
	Send(*IdentifierDataResponse) error
	grpc.ServerStream
}

type deviceDataServiceGetIdentifiersServer struct {
	grpc.ServerStream
}

func (x *deviceDataServiceGetIdentifiersServer) Send(m *IdentifierDataResponse) error {
	return x.ServerStream.SendMsg(m)
}

var _DeviceDataService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "DeviceDataService",
	HandlerType: (*DeviceDataServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetDeviceData",
			Handler:    _DeviceDataService_GetDeviceData_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "GetIdentifiers",
			Handler:       _DeviceDataService_GetIdentifiers_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "devicedataservice.proto",
}
